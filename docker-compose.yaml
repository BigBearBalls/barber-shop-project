services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.4
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - barber-shop-network

  barber-shop-database:
    image: postgres:14.7-alpine
    environment:
      - 'POSTGRES_DB=barber-shop-database'
      - 'POSTGRES_PASSWORD=1234'
      - 'POSTGRES_USER=admin'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "chelovek", "-d", "orders-database" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"
    networks:
      - barber-shop-network

  kafka:
    image: confluentinc/cp-kafka:6.2.4
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - barber-shop-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - barber-shop-network

  auth-service:
    image: quay.io/keycloak/keycloak:26.0.4
    restart: always
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "8082:8080"
    command:
      - start-dev
    networks:
      - barber-shop-network
  notification-service:
    build: ./notification-service
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - kafka
      - kafka-ui
      - auth-service
    networks:
      - barber-shop-network
  booking-service:
    build: ./booking-service
    ports:
      - "9003:8080"
    restart: always
    depends_on:
      - kafka
      - kafka-ui
      - auth-service
    networks:
      - barber-shop-network
  gateway-service:
    build: ./gateway-service
    ports:
      - "7080:8080"
    restart: always
    depends_on:
      - notification-service
      - auth-service
    environment:
      KEYCLOAK_ISSUER_URI: ${KEYCLOAK_ISSUER_URI}
      KEYCLOAK_JWK_URI: ${KEYCLOAK_JWK_URI}
    networks:
      - barber-shop-network





#  kafka-topics-generator:
#    image: confluentinc/cp-kafka:6.2.4
#    depends_on:
#      kafka:
#        condition: service_healthy
#    entrypoint: [ '/bin/sh', '-c' ]
#    networks:
#      - barber-shop-network
#    command: |
#      "
#      # blocks until kafka is reachable
#      kafka-topics --bootstrap-server kafka:9092 --list
#
#      echo -e 'Creating kafka topics'
#      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic notification-topic --replication-factor 1 --partitions 3
#      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic order-topic --replication-factor 1 --partitions 3
#
#      echo -e 'Successfully created the following topics:'
#      kafka-topics --bootstrap-server kafka:9092 --list
#      "

networks:
  barber-shop-network:
    driver: bridge